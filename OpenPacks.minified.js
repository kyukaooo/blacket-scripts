let pack,amount,extra_delay=0,max_delay=Object.values(blacket.rarities).map((a=>a.wait)).reduce(((a,e)=>a>e?a:e))+extra_delay,openPack=async a=>new Promise(((e,o)=>{blacket.requests.post("/worker2/open",{pack:a},(a=>{a.error&&o(),e(a.blook)}))})),main=async(a,e)=>{const o=[];for(;!(o.length>=e);)try{const e=await openPack(a);blacket.user.tokens-=blacket.packs[a].price;const t=blacket.rarities[blacket.blooks[e].rarity].wait+extra_delay;console.log("%cOpened ",`%c${e}`,"font-size: 4em",`color: ${blacket.rarities[blacket.blooks[e].rarity].color}; font-size: 4em`),o.push(e),await new Promise(((a,e)=>setTimeout(a,t)))}catch(a){console.log(a),await new Promise(((a,e)=>setTimeout(a,max_delay)))}console.log(`%cFinished opening ${e} packs!`,"font-size: 4em")},packs=Object.keys(blacket.packs);do{if((pack&&!packs.includes(pack)||""===pack)&&!window.confirm("Invalid pack, would you like to try again?"))break;if(pack=window.prompt("Enter a pack (case-sensitive)"),null===pack)break}while(!pack||!packs.includes(pack));let max_packs=Math.floor(blacket.user.tokens/blacket.packs[pack].price);do{if(amount&&(amount<1||amount>max_packs)&&!window.confirm("Invalid amount, would you like to try again?"))break;if(amount=parseInt(window.prompt(`Enter a number of packs to open (Max: ${max_packs})`)),null===amount)break}while(!amount||amount<1||amount>max_packs);main(pack,amount);